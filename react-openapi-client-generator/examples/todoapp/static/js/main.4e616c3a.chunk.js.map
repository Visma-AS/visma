{"version":3,"sources":["Container/styles.module.css","Container/Aside.tsx","Container/index.tsx","client.ts","api.js","Footer/ClearCompleted.tsx","Footer/Counter.tsx","Footer/Filter.tsx","Footer/index.tsx","Input.tsx","List/Item.tsx","List/index.tsx","ToggleAll.tsx","App.tsx","index.tsx"],"names":["module","exports","Aside","className","href","url","text","map","Container","children","styles","clientPromise","OpenAPIClientAxios","definition","init","getItemsRaw","a","client","putItemsRaw","postItemRaw","deleteItemsRaw","getItemRaw","putItemRaw","deleteItemRaw","putItems","response","data","postItem","deleteItems","putItem","deleteItem","create","useItemsRaw","refetchItems","useItems","item","_id","items","ClearCompleted","completedItems","filter","completed","length","onClick","Counter","Filter","path","title","activeClassName","exact","replace","to","Footer","Input","inputRef","useRef","ref","autoFocus","onKeyDown","key","input","current","value","trim","placeholder","type","Item","useState","focus","setFocus","isEditing","setIsEditing","handleSave","useEffect","clsx","onDoubleClick","checked","onChange","defaultValue","onBlur","List","useRouteMatch","params","listItems","Boolean","ToggleAll","every","id","htmlFor","basename","homepage","App","fallback","window","document","location","pathname","endsWith","worker","start","serviceWorker","undefined","ReactDOM","render","StrictMode","getElementById","main"],"mappings":"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","file":"static/js/main.4e616c3a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"learn-bar\":\"styles_learn-bar__3bpGf\"};","export default function Aside() {\n  return (\n    <aside className=\"learn\">\n      <header>\n        <h3>@visma/react-openapi-client-generator</h3>\n        <h5>Example</h5>\n        <a href=\"https://github.com/Visma-AS/visma/tree/main/packages/react-openapi-client-generator/examples/todoapp\">\n          Source\n        </a>\n      </header>\n      <hr />\n      <h4>Official Resources</h4>\n      <ul>\n        {[\n          {\n            url: 'https://github.com/Visma-AS/visma/tree/main/packages/react-openapi-client-generator',\n            text: '@visma/react-openapi-client-generator',\n          },\n          {\n            url: 'https://github.com/Visma-AS/visma/tree/main/packages/msw-openapi-backend-integration',\n            text: '@visma/msw-openapi-backend-integration',\n          },\n          {\n            url: 'https://github.com/ArnoSaine/postinumero/tree/main/packages/use-async',\n            text: '@postinumero/use-async',\n          },\n          {\n            url: 'https://mswjs.io',\n            text: 'msw',\n          },\n          {\n            url: 'https://github.com/anttiviljami/openapi-backend',\n            text: 'openapi-backend',\n          },\n          {\n            url: 'https://github.com/anttiviljami/openapi-client-axios',\n            text: 'openapi-client-axios',\n          },\n        ].map(({ text, url }) => (\n          <li key={url}>\n            <a href={url}>{text}</a>\n          </li>\n        ))}\n      </ul>\n    </aside>\n  );\n}\n","import Aside from './Aside';\nimport styles from './styles.module.css';\n\ntype Props = { children: React.ReactNode };\n\nexport default function Container({ children }: Props) {\n  return (\n    <div className={`learn-bar ${styles['learn-bar']}`}>\n      <Aside />\n      {children}\n    </div>\n  );\n}\n","import {\n  OpenAPIClient,\n  Parameters,\n  UnknownParamsObject,\n  OperationResponse,\n  AxiosRequestConfig,\n} from 'openapi-client-axios';\nimport { Document } from 'openapi-client-axios';\nimport OpenAPIClientAxios from 'openapi-client-axios';\nimport { create } from '@postinumero/use-async';\nimport definition from './TodoMVC-API.json';\n\nexport declare namespace Components {\n  namespace Schemas {\n    export interface Item {\n      _id?: string;\n      timestamp?: number;\n      title?: string;\n      completed?: boolean;\n    }\n    export type Items = Item[];\n  }\n}\nexport declare namespace Paths {\n  namespace DeleteItem {\n    namespace Parameters {\n      export type ItemId = string;\n    }\n    export interface PathParameters {\n      itemId: Parameters.ItemId;\n    }\n  }\n  namespace GetItem {\n    namespace Parameters {\n      export type ItemId = string;\n    }\n    export interface PathParameters {\n      itemId: Parameters.ItemId;\n    }\n    namespace Responses {\n      export type $200 = Components.Schemas.Item;\n    }\n  }\n  namespace GetItems {\n    namespace Responses {\n      export type $200 = Components.Schemas.Items;\n    }\n  }\n  namespace PutItem {\n    namespace Parameters {\n      export type ItemId = string;\n    }\n    export interface PathParameters {\n      itemId: Parameters.ItemId;\n    }\n  }\n}\nexport interface OperationMethods {\n  /**\n   * getItems - List all items\n   */\n  'getItems'(\n    parameters?: Parameters<UnknownParamsObject> | null,\n    data?: any,\n    config?: AxiosRequestConfig  \n  ): OperationResponse<Paths.GetItems.Responses.$200>\n  /**\n   * putItems - Update a list of items\n   */\n  'putItems'(\n    parameters?: Parameters<UnknownParamsObject> | null,\n    data?: any,\n    config?: AxiosRequestConfig  \n  ): OperationResponse<any>\n  /**\n   * postItem - Create an item\n   */\n  'postItem'(\n    parameters?: Parameters<UnknownParamsObject> | null,\n    data?: any,\n    config?: AxiosRequestConfig  \n  ): OperationResponse<any>\n  /**\n   * deleteItems - Delete a list of items\n   */\n  'deleteItems'(\n    parameters?: Parameters<UnknownParamsObject> | null,\n    data?: any,\n    config?: AxiosRequestConfig  \n  ): OperationResponse<any>\n  /**\n   * getItem - Get an item by id\n   */\n  'getItem'(\n    parameters?: Parameters<Paths.GetItem.PathParameters> | null,\n    data?: any,\n    config?: AxiosRequestConfig  \n  ): OperationResponse<Paths.GetItem.Responses.$200>\n  /**\n   * putItem - Update an item\n   */\n  'putItem'(\n    parameters?: Parameters<Paths.PutItem.PathParameters> | null,\n    data?: any,\n    config?: AxiosRequestConfig  \n  ): OperationResponse<any>\n  /**\n   * deleteItem - Delete an item\n   */\n  'deleteItem'(\n    parameters?: Parameters<Paths.DeleteItem.PathParameters> | null,\n    data?: any,\n    config?: AxiosRequestConfig  \n  ): OperationResponse<any>\n}\n\nexport interface PathsDictionary {\n  ['/items']: {\n    /**\n     * getItems - List all items\n     */\n    'get'(\n      parameters?: Parameters<UnknownParamsObject> | null,\n      data?: any,\n      config?: AxiosRequestConfig  \n    ): OperationResponse<Paths.GetItems.Responses.$200>\n    /**\n     * postItem - Create an item\n     */\n    'post'(\n      parameters?: Parameters<UnknownParamsObject> | null,\n      data?: any,\n      config?: AxiosRequestConfig  \n    ): OperationResponse<any>\n    /**\n     * putItems - Update a list of items\n     */\n    'put'(\n      parameters?: Parameters<UnknownParamsObject> | null,\n      data?: any,\n      config?: AxiosRequestConfig  \n    ): OperationResponse<any>\n    /**\n     * deleteItems - Delete a list of items\n     */\n    'delete'(\n      parameters?: Parameters<UnknownParamsObject> | null,\n      data?: any,\n      config?: AxiosRequestConfig  \n    ): OperationResponse<any>\n  }\n  ['/items/{itemId}']: {\n    /**\n     * getItem - Get an item by id\n     */\n    'get'(\n      parameters?: Parameters<Paths.GetItem.PathParameters> | null,\n      data?: any,\n      config?: AxiosRequestConfig  \n    ): OperationResponse<Paths.GetItem.Responses.$200>\n    /**\n     * putItem - Update an item\n     */\n    'put'(\n      parameters?: Parameters<Paths.PutItem.PathParameters> | null,\n      data?: any,\n      config?: AxiosRequestConfig  \n    ): OperationResponse<any>\n    /**\n     * deleteItem - Delete an item\n     */\n    'delete'(\n      parameters?: Parameters<Paths.DeleteItem.PathParameters> | null,\n      data?: any,\n      config?: AxiosRequestConfig  \n    ): OperationResponse<any>\n  }\n}\n\nexport type Client = OpenAPIClient<OperationMethods, PathsDictionary>\n\n// Copied from the standard library and renamed to FunctionParameters\n// because the name Parameters clashes with openapi-client-axios.\n/**\n * Obtain the parameters of a function type in a tuple\n */\ntype FunctionParameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : never;\n\nconst api = new OpenAPIClientAxios({ definition: definition as Document });\n\nexport const clientPromise = api.init<Client>();\n\nexport async function getItemsRaw(...args: FunctionParameters<OperationMethods['getItems']>) {\n  const client = await clientPromise;\n  return await client['getItems'](...args);\n};\n\nexport async function putItemsRaw(...args: FunctionParameters<OperationMethods['putItems']>) {\n  const client = await clientPromise;\n  return await client['putItems'](...args);\n};\n\nexport async function postItemRaw(...args: FunctionParameters<OperationMethods['postItem']>) {\n  const client = await clientPromise;\n  return await client['postItem'](...args);\n};\n\nexport async function deleteItemsRaw(...args: FunctionParameters<OperationMethods['deleteItems']>) {\n  const client = await clientPromise;\n  return await client['deleteItems'](...args);\n};\n\nexport async function getItemRaw(...args: FunctionParameters<OperationMethods['getItem']>) {\n  const client = await clientPromise;\n  return await client['getItem'](...args);\n};\n\nexport async function putItemRaw(...args: FunctionParameters<OperationMethods['putItem']>) {\n  const client = await clientPromise;\n  return await client['putItem'](...args);\n};\n\nexport async function deleteItemRaw(...args: FunctionParameters<OperationMethods['deleteItem']>) {\n  const client = await clientPromise;\n  return await client['deleteItem'](...args);\n};\n\nexport async function getItems(...args: FunctionParameters<OperationMethods['getItems']>) {\n  const response = await getItemsRaw(...args);\n  return response.data;\n};\n\nexport async function putItems(...args: FunctionParameters<OperationMethods['putItems']>) {\n  const response = await putItemsRaw(...args);\n  return response.data;\n};\n\nexport async function postItem(...args: FunctionParameters<OperationMethods['postItem']>) {\n  const response = await postItemRaw(...args);\n  return response.data;\n};\n\nexport async function deleteItems(...args: FunctionParameters<OperationMethods['deleteItems']>) {\n  const response = await deleteItemsRaw(...args);\n  return response.data;\n};\n\nexport async function getItem(...args: FunctionParameters<OperationMethods['getItem']>) {\n  const response = await getItemRaw(...args);\n  return response.data;\n};\n\nexport async function putItem(...args: FunctionParameters<OperationMethods['putItem']>) {\n  const response = await putItemRaw(...args);\n  return response.data;\n};\n\nexport async function deleteItem(...args: FunctionParameters<OperationMethods['deleteItem']>) {\n  const response = await deleteItemRaw(...args);\n  return response.data;\n};\n\nexport const [useItemsRaw, refetchItems, useItemsRawSafe] = create(getItemsRaw);\n\nexport const [useItemRaw, refetchItem, useItemRawSafe] = create(getItemRaw);\n\nexport function useItems(...args: FunctionParameters<OperationMethods['getItems']>) {\n  return useItemsRaw(...args).data;\n}\n\nexport function useItem(...args: FunctionParameters<OperationMethods['getItem']>) {\n  return useItemRaw(...args).data;\n}\n\nexport function useItemsSafe(...args: FunctionParameters<OperationMethods['getItems']>) {\n  const [error, response] = useItemsRawSafe(...args)\n  return [error, response?.data];\n}\n\nexport function useItemSafe(...args: FunctionParameters<OperationMethods['getItem']>) {\n  const [error, response] = useItemRawSafe(...args)\n  return [error, response?.data];\n}\n","import * as client from './client';\n\nexport * from './client';\n\nexport async function postItem(item) {\n  await client.postItem(null, item);\n  await client.refetchItems();\n}\n\nexport async function putItem(item) {\n  await client.putItem(item._id, item);\n  await client.refetchItems();\n}\n\nexport async function putItems(items) {\n  await client.putItems(null, items);\n  await client.refetchItems();\n}\n\nexport async function deleteItem(item) {\n  await client.deleteItem(item._id);\n  await client.refetchItems();\n}\n\nexport async function deleteItems(items) {\n  await client.deleteItems(\n    null,\n    items.map((item) => item._id)\n  );\n  await client.refetchItems();\n}\n\n// Poll API 😕 to get updates from other users and tabs\n//setInterval(() =>  client.refetchItems(), 5000);\n","import { useItems, deleteItems } from '../api';\n\nexport default function ClearCompleted() {\n  const items = useItems();\n  const completedItems = items.filter(({ completed }) => completed);\n  const { length } = completedItems;\n\n  return length ? (\n    <button\n      className=\"clear-completed\"\n      onClick={() => deleteItems(completedItems)}\n    >\n      Clear completed ({length})\n    </button>\n  ) : null;\n}\n","import { useItems } from '../api';\n\nexport default function Counter() {\n  const items = useItems();\n  const activeItems = items.filter(({ completed }) => !completed);\n  const { length } = activeItems;\n\n  return (\n    <span className=\"todo-count\">\n      {length} {length === 1 ? 'item' : 'items'} left\n    </span>\n  );\n}\n","import { NavLink } from 'react-router-dom';\n\nexport default function Filter() {\n  return (\n    <ul className=\"filters\">\n      {[\n        { path: '', title: 'All' },\n        { path: 'active', title: 'Active' },\n        { path: 'completed', title: 'Completed' },\n      ].map(({ path, title }) => (\n        <li key={path}>\n          <NavLink activeClassName=\"selected\" exact replace to={`/${path}`}>\n            {title}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useItems } from '../api';\nimport ClearCompleted from './ClearCompleted';\nimport Counter from './Counter';\nimport Filter from './Filter';\n\nexport default function Footer() {\n  const items = useItems();\n\n  return items.length ? (\n    <footer className=\"footer\">\n      <Counter />\n      <Filter />\n      <ClearCompleted />\n    </footer>\n  ) : null;\n}\n","import { useRef } from 'react';\nimport { postItem } from './api';\n\nexport default function Input() {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  return (\n    <input\n      ref={inputRef}\n      autoFocus\n      className=\"new-todo\"\n      onKeyDown={async ({ key }) => {\n        const input = inputRef.current;\n        if (input) {\n          const title = input.value.trim();\n          if (key === 'Enter' && title) {\n            await postItem({ title });\n            input.value = '';\n          }\n        }\n      }}\n      placeholder=\"What needs to be done?\"\n      type=\"text\"\n    />\n  );\n}\n","import { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { deleteItem, putItem } from '../api';\nimport { Components } from '../client';\n\ntype Props = { item: Components.Schemas.Item };\n\nexport default function Item({\n  item,\n  item: { completed = false, title },\n}: Props) {\n  const [focus, setFocus] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (focus) {\n      inputRef.current?.focus();\n      setFocus(false);\n    }\n  }, [focus, setFocus]);\n\n  function handleSave() {\n    if (isEditing) {\n      setIsEditing(false);\n      putItem({\n        ...item,\n        title: inputRef.current?.value.trim(),\n      });\n    }\n  }\n\n  return (\n    <li\n      className={clsx(completed && 'completed', isEditing && 'editing')}\n      onDoubleClick={() => {\n        setFocus(true);\n        setIsEditing(true);\n      }}\n    >\n      <div className=\"view\">\n        <input\n          className=\"toggle\"\n          checked={completed}\n          onChange={() =>\n            putItem({\n              ...item,\n              completed: !completed,\n            })\n          }\n          type=\"checkbox\"\n        />\n        <label>{title}</label>\n        <button className=\"destroy\" onClick={() => deleteItem(item)} />\n      </div>\n      <input\n        className=\"edit\"\n        ref={inputRef}\n        type=\"text\"\n        defaultValue={title}\n        onKeyDown={({ key }) => {\n          if (key === 'Enter') {\n            handleSave();\n          }\n        }}\n        onBlur={handleSave}\n      />\n    </li>\n  );\n}\n","import { useRouteMatch } from 'react-router-dom';\nimport { useItems } from '../api';\nimport Item from './Item';\n\nexport interface MatchParams {\n  filter: string;\n}\n\nexport default function List() {\n  const {\n    params: { filter },\n  } = useRouteMatch<MatchParams>('/:filter?') ?? { params: {} };\n\n  const items = useItems();\n\n  const listItems = filter\n    ? items.filter(\n        ({ completed }) => Boolean(completed) === (filter === 'completed')\n      )\n    : items;\n\n  return (\n    <ul className=\"todo-list\">\n      {listItems.map((item) => (\n        <Item key={item._id} item={item} />\n      ))}\n    </ul>\n  );\n}\n","import { useItems, putItems } from './api';\n\nexport default function ToggleAll() {\n  const items = useItems();\n\n  if (!items.length) {\n    return null;\n  }\n\n  const completed = items.every(({ completed }) => completed);\n\n  return (\n    <>\n      <input\n        data-testid=\"toggle-all\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={completed}\n        onChange={() =>\n          putItems(items.map((item) => ({ ...item, completed: !completed })))\n        }\n        type=\"checkbox\"\n      />\n      <label htmlFor=\"toggle-all\" />\n    </>\n  );\n}\n","import { Suspense } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Container from './Container';\nimport Footer from './Footer';\nimport Input from './Input';\nimport List from './List';\nimport ToggleAll from './ToggleAll';\nimport { homepage } from '../package.json';\n\nexport const basename =\n  process.env.NODE_ENV === 'development' ? undefined : homepage;\n\nfunction App() {\n  return (\n    <Suspense fallback=\"loading...\">\n      <Container>\n        <BrowserRouter basename={basename}>\n          <section className=\"todoapp\">\n            <header>\n              <h1>todos</h1>\n            </header>\n            <Input />\n            <section className=\"main\">\n              <ToggleAll />\n              <List />\n              <Footer />\n            </section>\n          </section>\n        </BrowserRouter>\n      </Container>\n    </Suspense>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'todomvc-app-css/index.css';\nimport 'todomvc-common/base.css';\nimport App, { basename } from './App';\n\nasync function main() {\n  if (\n    typeof window !== 'undefined' &&\n    window.document // &&\n    // process.env.NODE_ENV === 'development' &&\n    // process.env.REACT_APP_MOCK === 'msw'\n  ) {\n    if (\n      basename &&\n      window.location.pathname === basename &&\n      !window.location.pathname.endsWith('/')\n    ) {\n      window.location.pathname = `${window.location.pathname}/`;\n      return;\n    }\n\n    const { worker } = await import('./mocks/browser');\n    await worker.start(\n      basename\n        ? {\n            serviceWorker: {\n              url: `${basename}/mockServiceWorker.js`,\n            },\n          }\n        : undefined\n    );\n  }\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nmain();\n"],"sourceRoot":""}